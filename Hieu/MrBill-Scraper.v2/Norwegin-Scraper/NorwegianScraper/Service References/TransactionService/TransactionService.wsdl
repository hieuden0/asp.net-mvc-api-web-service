<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soapenc12="http://www.w3.org/2003/05/soap-encoding" xmlns:ns2="http://exception.profile.octagroup.com" xmlns:soap11="http://schemas.xmlsoap.org/soap/envelope/" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope" xmlns:tns="http://service.profile.octagroup.com" xmlns:soapenc11="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns3="http://security.profile.octagroup.com" xmlns:ns1="http://model.profile.octagroup.com" targetNamespace="http://service.profile.octagroup.com" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://service.profile.octagroup.com">
      <xsd:element name="getTransactionsForUser">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="userId" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getTransactionsForUserResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="out" nillable="true" type="ns1:ArrayOfTransaction" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="saveTransactions">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="userId" nillable="true" type="xsd:string" />
            <xsd:element minOccurs="1" maxOccurs="1" name="transactions" nillable="true" type="ns1:ArrayOfTransaction" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="saveTransactionsResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="TransactionSaveException" type="ns2:TransactionSaveException" />
      <xsd:element name="getTransaction">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="transactionId" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getTransactionResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="out" nillable="true" type="ns1:Transaction" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="TransactionNotFoundException" type="ns2:TransactionNotFoundException" />
      <xsd:element name="getTransactionsForUserByOwner">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="userId" nillable="true" type="xsd:string" />
            <xsd:element minOccurs="1" maxOccurs="1" name="transactionOwner" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getTransactionsForUserByOwnerResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="out" nillable="true" type="ns1:ArrayOfTransaction" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="saveTransactionSuppliers">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="1" maxOccurs="1" name="userId" nillable="true" type="xsd:string" />
            <xsd:element minOccurs="1" maxOccurs="1" name="transactionSuppliers" nillable="true" type="ns1:ArrayOfTransactionSupplier" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="saveTransactionSuppliersResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="TransactionSupplierSaveException" type="ns2:TransactionSupplierSaveException" />
      <xsd:element name="AuthenticationToken" type="ns3:AuthenticationToken" />
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://model.profile.octagroup.com">
      <xsd:complexType name="ArrayOfTransaction">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Transaction" nillable="true" type="ns1:Transaction" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Transaction">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="addedDate" type="xsd:dateTime" />
          <xsd:element minOccurs="0" name="attachedPersons" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="bookingReference" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="category" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="country" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="creditCardNumber" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="creditCardOwner" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="currency" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="date1" type="xsd:dateTime" />
          <xsd:element minOccurs="0" name="date2" type="xsd:dateTime" />
          <xsd:element minOccurs="0" name="departureCity" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="description" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="destination" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="destinationCity" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="expenseDate" type="xsd:dateTime" />
          <xsd:element minOccurs="0" name="fileLocation" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:long" />
          <xsd:element minOccurs="0" name="localAmount" nillable="true" type="xsd:decimal" />
          <xsd:element minOccurs="0" name="multiTransactionId" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="numberOfUnits" nillable="true" type="xsd:int" />
          <xsd:element minOccurs="0" name="paymentType" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="prePaid" type="xsd:boolean" />
          <xsd:element minOccurs="0" name="price" nillable="true" type="xsd:decimal" />
          <xsd:element minOccurs="0" name="product" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="removedDate" type="xsd:dateTime" />
          <xsd:element minOccurs="0" name="toBeDeleted" type="xsd:boolean" />
          <xsd:element minOccurs="0" name="total" nillable="true" type="xsd:decimal" />
          <xsd:element name="transactionDate" type="xsd:dateTime" />
          <xsd:element name="transactionOwner" type="xsd:string" />
          <xsd:element name="transactionStatus" type="ns1:TransactionStatus" />
          <xsd:element minOccurs="0" name="transactionSupplier" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="travelerConfirmationEmail" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="travelerCostCenter" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="travelerEmployeeId" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="travelerMembershipCard" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="travelerName" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="travelerProjectNumber" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="tripType" nillable="true" type="xsd:string" />
          <xsd:element name="userIdentity" type="ns1:Identity" />
          <xsd:element minOccurs="0" name="userType" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="vat1" nillable="true" type="xsd:decimal" />
          <xsd:element minOccurs="0" name="vat2" nillable="true" type="xsd:decimal" />
          <xsd:element minOccurs="0" name="vat3" nillable="true" type="xsd:decimal" />
          <xsd:element name="version" type="xsd:int" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Identity">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:long" />
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="TransactionStatus">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="SHOWN" />
          <xsd:enumeration value="HIDDEN" />
          <xsd:enumeration value="DISABLED" />
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfTransactionSupplier">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TransactionSupplier" nillable="true" type="ns1:TransactionSupplier" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="TransactionSupplier">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="id" nillable="true" type="xsd:long" />
          <xsd:element minOccurs="0" name="name" nillable="true" type="xsd:string" />
          <xsd:element name="supplierPassword" type="xsd:string" />
          <xsd:element name="supplierUsername" type="xsd:string" />
          <xsd:element minOccurs="0" name="toBeDeleted" type="xsd:boolean" />
          <xsd:element name="url" type="xsd:string" />
          <xsd:element minOccurs="0" name="userIdentity" nillable="true" type="ns1:Identity" />
          <xsd:element name="version" type="xsd:int" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://exception.profile.octagroup.com">
      <xsd:complexType name="TransactionSaveException" />
      <xsd:complexType name="TransactionNotFoundException" />
      <xsd:complexType name="TransactionSupplierSaveException" />
    </xsd:schema>
    <xsd:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://security.profile.octagroup.com">
      <xsd:complexType name="AuthenticationToken">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="password" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="username" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getTransactionRequestHeaders">
    <wsdl:part name="AuthenticationToken" element="tns:AuthenticationToken" />
  </wsdl:message>
  <wsdl:message name="getTransactionResponse">
    <wsdl:part name="parameters" element="tns:getTransactionResponse" />
  </wsdl:message>
  <wsdl:message name="getTransactionsForUserResponse">
    <wsdl:part name="parameters" element="tns:getTransactionsForUserResponse" />
  </wsdl:message>
  <wsdl:message name="getTransactionsForUserByOwnerResponse">
    <wsdl:part name="parameters" element="tns:getTransactionsForUserByOwnerResponse" />
  </wsdl:message>
  <wsdl:message name="getTransactionsForUserByOwnerRequestHeaders">
    <wsdl:part name="AuthenticationToken" element="tns:AuthenticationToken" />
  </wsdl:message>
  <wsdl:message name="saveTransactionsResponse">
    <wsdl:part name="parameters" element="tns:saveTransactionsResponse" />
  </wsdl:message>
  <wsdl:message name="getTransactionsForUserRequest">
    <wsdl:part name="parameters" element="tns:getTransactionsForUser" />
  </wsdl:message>
  <wsdl:message name="saveTransactionsRequest">
    <wsdl:part name="parameters" element="tns:saveTransactions" />
  </wsdl:message>
  <wsdl:message name="saveTransactionSuppliersResponse">
    <wsdl:part name="parameters" element="tns:saveTransactionSuppliersResponse" />
  </wsdl:message>
  <wsdl:message name="saveTransactionSuppliersRequest">
    <wsdl:part name="parameters" element="tns:saveTransactionSuppliers" />
  </wsdl:message>
  <wsdl:message name="saveTransactionSuppliersRequestHeaders">
    <wsdl:part name="AuthenticationToken" element="tns:AuthenticationToken" />
  </wsdl:message>
  <wsdl:message name="TransactionSupplierSaveException">
    <wsdl:part name="TransactionSupplierSaveException" element="tns:TransactionSupplierSaveException" />
  </wsdl:message>
  <wsdl:message name="TransactionNotFoundException">
    <wsdl:part name="TransactionNotFoundException" element="tns:TransactionNotFoundException" />
  </wsdl:message>
  <wsdl:message name="saveTransactionsRequestHeaders">
    <wsdl:part name="AuthenticationToken" element="tns:AuthenticationToken" />
  </wsdl:message>
  <wsdl:message name="getTransactionRequest">
    <wsdl:part name="parameters" element="tns:getTransaction" />
  </wsdl:message>
  <wsdl:message name="getTransactionsForUserRequestHeaders">
    <wsdl:part name="AuthenticationToken" element="tns:AuthenticationToken" />
  </wsdl:message>
  <wsdl:message name="TransactionSaveException">
    <wsdl:part name="TransactionSaveException" element="tns:TransactionSaveException" />
  </wsdl:message>
  <wsdl:message name="getTransactionsForUserByOwnerRequest">
    <wsdl:part name="parameters" element="tns:getTransactionsForUserByOwner" />
  </wsdl:message>
  <wsdl:portType name="TransactionServicePortType">
    <wsdl:operation name="getTransactionsForUser">
      <wsdl:input name="getTransactionsForUserRequest" message="tns:getTransactionsForUserRequest" />
      <wsdl:output name="getTransactionsForUserResponse" message="tns:getTransactionsForUserResponse" />
    </wsdl:operation>
    <wsdl:operation name="saveTransactions">
      <wsdl:input name="saveTransactionsRequest" message="tns:saveTransactionsRequest" />
      <wsdl:output name="saveTransactionsResponse" message="tns:saveTransactionsResponse" />
      <wsdl:fault name="TransactionSaveException" message="tns:TransactionSaveException" />
    </wsdl:operation>
    <wsdl:operation name="getTransaction">
      <wsdl:input name="getTransactionRequest" message="tns:getTransactionRequest" />
      <wsdl:output name="getTransactionResponse" message="tns:getTransactionResponse" />
      <wsdl:fault name="TransactionNotFoundException" message="tns:TransactionNotFoundException" />
    </wsdl:operation>
    <wsdl:operation name="getTransactionsForUserByOwner">
      <wsdl:input name="getTransactionsForUserByOwnerRequest" message="tns:getTransactionsForUserByOwnerRequest" />
      <wsdl:output name="getTransactionsForUserByOwnerResponse" message="tns:getTransactionsForUserByOwnerResponse" />
    </wsdl:operation>
    <wsdl:operation name="saveTransactionSuppliers">
      <wsdl:input name="saveTransactionSuppliersRequest" message="tns:saveTransactionSuppliersRequest" />
      <wsdl:output name="saveTransactionSuppliersResponse" message="tns:saveTransactionSuppliersResponse" />
      <wsdl:fault name="TransactionSupplierSaveException" message="tns:TransactionSupplierSaveException" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="TransactionServiceHttpBinding" type="tns:TransactionServicePortType">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="getTransactionsForUser">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getTransactionsForUserRequest">
        <wsdlsoap:body use="literal" />
        <wsdlsoap:header message="tns:getTransactionsForUserRequestHeaders" part="AuthenticationToken" use="literal" />
      </wsdl:input>
      <wsdl:output name="getTransactionsForUserResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="saveTransactions">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="saveTransactionsRequest">
        <wsdlsoap:body use="literal" />
        <wsdlsoap:header message="tns:saveTransactionsRequestHeaders" part="AuthenticationToken" use="literal" />
      </wsdl:input>
      <wsdl:output name="saveTransactionsResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="TransactionSaveException">
        <wsdlsoap:fault use="literal" name="TransactionSaveException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTransaction">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getTransactionRequest">
        <wsdlsoap:body use="literal" />
        <wsdlsoap:header message="tns:getTransactionRequestHeaders" part="AuthenticationToken" use="literal" />
      </wsdl:input>
      <wsdl:output name="getTransactionResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="TransactionNotFoundException">
        <wsdlsoap:fault use="literal" name="TransactionNotFoundException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getTransactionsForUserByOwner">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getTransactionsForUserByOwnerRequest">
        <wsdlsoap:body use="literal" />
        <wsdlsoap:header message="tns:getTransactionsForUserByOwnerRequestHeaders" part="AuthenticationToken" use="literal" />
      </wsdl:input>
      <wsdl:output name="getTransactionsForUserByOwnerResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="saveTransactionSuppliers">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="saveTransactionSuppliersRequest">
        <wsdlsoap:body use="literal" />
        <wsdlsoap:header message="tns:saveTransactionSuppliersRequestHeaders" part="AuthenticationToken" use="literal" />
      </wsdl:input>
      <wsdl:output name="saveTransactionSuppliersResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
      <wsdl:fault name="TransactionSupplierSaveException">
        <wsdlsoap:fault use="literal" name="TransactionSupplierSaveException" namespace="" />
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="TransactionService">
    <wsdl:port name="TransactionServiceHttpPort" binding="tns:TransactionServiceHttpBinding">
      <wsdlsoap:address location="http://83.140.154.10:8080/profile_mrb/services/TransactionService" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>