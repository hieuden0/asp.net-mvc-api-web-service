//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MrBill_MVC.MrBillTransactionServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionCheckInfo", Namespace="http://schemas.datacontract.org/2004/07/MrBillServices.DTO")]
    [System.SerializableAttribute()]
    public partial class TransactionCheckInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookingReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TransactionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookingReference {
            get {
                return this.BookingReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingReferenceField, value) != true)) {
                    this.BookingReferenceField = value;
                    this.RaisePropertyChanged("BookingReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TransactionID {
            get {
                return this.TransactionIDField;
            }
            set {
                if ((this.TransactionIDField.Equals(value) != true)) {
                    this.TransactionIDField = value;
                    this.RaisePropertyChanged("TransactionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionDTO", Namespace="http://schemas.datacontract.org/2004/07/MrBillServices.DTO")]
    [System.SerializableAttribute()]
    public partial class TransactionDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AddedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AirDepTime1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AirDepTime2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AirRetTime1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime AirRetTime2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ApproveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttendeesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BookingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookingRefField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CarTime1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CarTime2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardHolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDep1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityDep2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityRet1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityRet2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CostCenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EmployeeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExportStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExtraInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> HtlTime1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> HtlTime2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MainTripField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> MainTripGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MrBill_MVC.MrBillTransactionServices.PaymentTypeDTO PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float PriceUserCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MrBill_MVC.MrBillTransactionServices.ProjectDTO ProjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProjectNOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiptLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RemoveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MrBill_MVC.MrBillTransactionServices.SupplierInfoDTO SupplierInfoesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MrBill_MVC.MrBillTransactionServices.TransactionGroupDTO TransactionGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TransactionGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TravellerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UnitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UnlockedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UnlockedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> Vat1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> Vat2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> Vat3Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AddedDate {
            get {
                return this.AddedDateField;
            }
            set {
                if ((this.AddedDateField.Equals(value) != true)) {
                    this.AddedDateField = value;
                    this.RaisePropertyChanged("AddedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AirDepTime1 {
            get {
                return this.AirDepTime1Field;
            }
            set {
                if ((this.AirDepTime1Field.Equals(value) != true)) {
                    this.AirDepTime1Field = value;
                    this.RaisePropertyChanged("AirDepTime1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AirDepTime2 {
            get {
                return this.AirDepTime2Field;
            }
            set {
                if ((this.AirDepTime2Field.Equals(value) != true)) {
                    this.AirDepTime2Field = value;
                    this.RaisePropertyChanged("AirDepTime2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AirRetTime1 {
            get {
                return this.AirRetTime1Field;
            }
            set {
                if ((this.AirRetTime1Field.Equals(value) != true)) {
                    this.AirRetTime1Field = value;
                    this.RaisePropertyChanged("AirRetTime1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AirRetTime2 {
            get {
                return this.AirRetTime2Field;
            }
            set {
                if ((this.AirRetTime2Field.Equals(value) != true)) {
                    this.AirRetTime2Field = value;
                    this.RaisePropertyChanged("AirRetTime2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ApproveDate {
            get {
                return this.ApproveDateField;
            }
            set {
                if ((this.ApproveDateField.Equals(value) != true)) {
                    this.ApproveDateField = value;
                    this.RaisePropertyChanged("ApproveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attendees {
            get {
                return this.AttendeesField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendeesField, value) != true)) {
                    this.AttendeesField = value;
                    this.RaisePropertyChanged("Attendees");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BookingDate {
            get {
                return this.BookingDateField;
            }
            set {
                if ((this.BookingDateField.Equals(value) != true)) {
                    this.BookingDateField = value;
                    this.RaisePropertyChanged("BookingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookingRef {
            get {
                return this.BookingRefField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingRefField, value) != true)) {
                    this.BookingRefField = value;
                    this.RaisePropertyChanged("BookingRef");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CarTime1 {
            get {
                return this.CarTime1Field;
            }
            set {
                if ((this.CarTime1Field.Equals(value) != true)) {
                    this.CarTime1Field = value;
                    this.RaisePropertyChanged("CarTime1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CarTime2 {
            get {
                return this.CarTime2Field;
            }
            set {
                if ((this.CarTime2Field.Equals(value) != true)) {
                    this.CarTime2Field = value;
                    this.RaisePropertyChanged("CarTime2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardHolder {
            get {
                return this.CardHolderField;
            }
            set {
                if ((object.ReferenceEquals(this.CardHolderField, value) != true)) {
                    this.CardHolderField = value;
                    this.RaisePropertyChanged("CardHolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNumber {
            get {
                return this.CardNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNumberField, value) != true)) {
                    this.CardNumberField = value;
                    this.RaisePropertyChanged("CardNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDep1 {
            get {
                return this.CityDep1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CityDep1Field, value) != true)) {
                    this.CityDep1Field = value;
                    this.RaisePropertyChanged("CityDep1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityDep2 {
            get {
                return this.CityDep2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CityDep2Field, value) != true)) {
                    this.CityDep2Field = value;
                    this.RaisePropertyChanged("CityDep2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityRet1 {
            get {
                return this.CityRet1Field;
            }
            set {
                if ((object.ReferenceEquals(this.CityRet1Field, value) != true)) {
                    this.CityRet1Field = value;
                    this.RaisePropertyChanged("CityRet1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityRet2 {
            get {
                return this.CityRet2Field;
            }
            set {
                if ((object.ReferenceEquals(this.CityRet2Field, value) != true)) {
                    this.CityRet2Field = value;
                    this.RaisePropertyChanged("CityRet2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CostCenter {
            get {
                return this.CostCenterField;
            }
            set {
                if ((this.CostCenterField.Equals(value) != true)) {
                    this.CostCenterField = value;
                    this.RaisePropertyChanged("CostCenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EmployeeID {
            get {
                return this.EmployeeIDField;
            }
            set {
                if ((this.EmployeeIDField.Equals(value) != true)) {
                    this.EmployeeIDField = value;
                    this.RaisePropertyChanged("EmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExportStatus {
            get {
                return this.ExportStatusField;
            }
            set {
                if ((this.ExportStatusField.Equals(value) != true)) {
                    this.ExportStatusField = value;
                    this.RaisePropertyChanged("ExportStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtraInfo {
            get {
                return this.ExtraInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraInfoField, value) != true)) {
                    this.ExtraInfoField = value;
                    this.RaisePropertyChanged("ExtraInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> HtlTime1 {
            get {
                return this.HtlTime1Field;
            }
            set {
                if ((this.HtlTime1Field.Equals(value) != true)) {
                    this.HtlTime1Field = value;
                    this.RaisePropertyChanged("HtlTime1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> HtlTime2 {
            get {
                return this.HtlTime2Field;
            }
            set {
                if ((this.HtlTime2Field.Equals(value) != true)) {
                    this.HtlTime2Field = value;
                    this.RaisePropertyChanged("HtlTime2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MainTrip {
            get {
                return this.MainTripField;
            }
            set {
                if ((this.MainTripField.Equals(value) != true)) {
                    this.MainTripField = value;
                    this.RaisePropertyChanged("MainTrip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MainTripGroup {
            get {
                return this.MainTripGroupField;
            }
            set {
                if ((this.MainTripGroupField.Equals(value) != true)) {
                    this.MainTripGroupField = value;
                    this.RaisePropertyChanged("MainTripGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentID {
            get {
                return this.PaymentIDField;
            }
            set {
                if ((this.PaymentIDField.Equals(value) != true)) {
                    this.PaymentIDField = value;
                    this.RaisePropertyChanged("PaymentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MrBill_MVC.MrBillTransactionServices.PaymentTypeDTO PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentTypeField, value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceCurrency {
            get {
                return this.PriceCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceCurrencyField, value) != true)) {
                    this.PriceCurrencyField = value;
                    this.RaisePropertyChanged("PriceCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float PriceUserCurrency {
            get {
                return this.PriceUserCurrencyField;
            }
            set {
                if ((this.PriceUserCurrencyField.Equals(value) != true)) {
                    this.PriceUserCurrencyField = value;
                    this.RaisePropertyChanged("PriceUserCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MrBill_MVC.MrBillTransactionServices.ProjectDTO Project {
            get {
                return this.ProjectField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectField, value) != true)) {
                    this.ProjectField = value;
                    this.RaisePropertyChanged("Project");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProjectNO {
            get {
                return this.ProjectNOField;
            }
            set {
                if ((this.ProjectNOField.Equals(value) != true)) {
                    this.ProjectNOField = value;
                    this.RaisePropertyChanged("ProjectNO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiptLink {
            get {
                return this.ReceiptLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiptLinkField, value) != true)) {
                    this.ReceiptLinkField = value;
                    this.RaisePropertyChanged("ReceiptLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RemoveDate {
            get {
                return this.RemoveDateField;
            }
            set {
                if ((this.RemoveDateField.Equals(value) != true)) {
                    this.RemoveDateField = value;
                    this.RaisePropertyChanged("RemoveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierID {
            get {
                return this.SupplierIDField;
            }
            set {
                if ((this.SupplierIDField.Equals(value) != true)) {
                    this.SupplierIDField = value;
                    this.RaisePropertyChanged("SupplierID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MrBill_MVC.MrBillTransactionServices.SupplierInfoDTO SupplierInfoes {
            get {
                return this.SupplierInfoesField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierInfoesField, value) != true)) {
                    this.SupplierInfoesField = value;
                    this.RaisePropertyChanged("SupplierInfoes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MrBill_MVC.MrBillTransactionServices.TransactionGroupDTO TransactionGroup {
            get {
                return this.TransactionGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionGroupField, value) != true)) {
                    this.TransactionGroupField = value;
                    this.RaisePropertyChanged("TransactionGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TransactionGroupID {
            get {
                return this.TransactionGroupIDField;
            }
            set {
                if ((this.TransactionGroupIDField.Equals(value) != true)) {
                    this.TransactionGroupIDField = value;
                    this.RaisePropertyChanged("TransactionGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionId {
            get {
                return this.TransactionIdField;
            }
            set {
                if ((this.TransactionIdField.Equals(value) != true)) {
                    this.TransactionIdField = value;
                    this.RaisePropertyChanged("TransactionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Traveller {
            get {
                return this.TravellerField;
            }
            set {
                if ((object.ReferenceEquals(this.TravellerField, value) != true)) {
                    this.TravellerField = value;
                    this.RaisePropertyChanged("Traveller");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((this.UnitsField.Equals(value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnlockedBy {
            get {
                return this.UnlockedByField;
            }
            set {
                if ((this.UnlockedByField.Equals(value) != true)) {
                    this.UnlockedByField = value;
                    this.RaisePropertyChanged("UnlockedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UnlockedDate {
            get {
                return this.UnlockedDateField;
            }
            set {
                if ((this.UnlockedDateField.Equals(value) != true)) {
                    this.UnlockedDateField = value;
                    this.RaisePropertyChanged("UnlockedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> Vat1 {
            get {
                return this.Vat1Field;
            }
            set {
                if ((this.Vat1Field.Equals(value) != true)) {
                    this.Vat1Field = value;
                    this.RaisePropertyChanged("Vat1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> Vat2 {
            get {
                return this.Vat2Field;
            }
            set {
                if ((this.Vat2Field.Equals(value) != true)) {
                    this.Vat2Field = value;
                    this.RaisePropertyChanged("Vat2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> Vat3 {
            get {
                return this.Vat3Field;
            }
            set {
                if ((this.Vat3Field.Equals(value) != true)) {
                    this.Vat3Field = value;
                    this.RaisePropertyChanged("Vat3");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentTypeDTO", Namespace="http://schemas.datacontract.org/2004/07/MrBillServices.DTO")]
    [System.SerializableAttribute()]
    public partial class PaymentTypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentId {
            get {
                return this.PaymentIdField;
            }
            set {
                if ((this.PaymentIdField.Equals(value) != true)) {
                    this.PaymentIdField = value;
                    this.RaisePropertyChanged("PaymentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentName {
            get {
                return this.PaymentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentNameField, value) != true)) {
                    this.PaymentNameField = value;
                    this.RaisePropertyChanged("PaymentName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectDTO", Namespace="http://schemas.datacontract.org/2004/07/MrBillServices.DTO")]
    [System.SerializableAttribute()]
    public partial class ProjectDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserControlIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectNumber {
            get {
                return this.ProjectNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNumberField, value) != true)) {
                    this.ProjectNumberField = value;
                    this.RaisePropertyChanged("ProjectNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserControlID {
            get {
                return this.UserControlIDField;
            }
            set {
                if ((this.UserControlIDField.Equals(value) != true)) {
                    this.UserControlIDField = value;
                    this.RaisePropertyChanged("UserControlID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupplierInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/MrBillServices.DTO")]
    [System.SerializableAttribute()]
    public partial class SupplierInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResetPasswordUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignUpUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResetPasswordUrl {
            get {
                return this.ResetPasswordUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ResetPasswordUrlField, value) != true)) {
                    this.ResetPasswordUrlField = value;
                    this.RaisePropertyChanged("ResetPasswordUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SignUpUrl {
            get {
                return this.SignUpUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.SignUpUrlField, value) != true)) {
                    this.SignUpUrlField = value;
                    this.RaisePropertyChanged("SignUpUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SupplierName {
            get {
                return this.SupplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierNameField, value) != true)) {
                    this.SupplierNameField = value;
                    this.RaisePropertyChanged("SupplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransactionGroupDTO", Namespace="http://schemas.datacontract.org/2004/07/MrBillServices.DTO")]
    [System.SerializableAttribute()]
    public partial class TransactionGroupDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TransactionGroupIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TransactionGroupID {
            get {
                return this.TransactionGroupIDField;
            }
            set {
                if ((this.TransactionGroupIDField.Equals(value) != true)) {
                    this.TransactionGroupIDField = value;
                    this.RaisePropertyChanged("TransactionGroupID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSupplierInfoDTO", Namespace="http://schemas.datacontract.org/2004/07/MrBillServices.DTO")]
    [System.SerializableAttribute()]
    public partial class UserSupplierInfoDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SupplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MrBill_MVC.MrBillTransactionServices.SupplierInfoDTO SupplierInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SupplierId {
            get {
                return this.SupplierIdField;
            }
            set {
                if ((this.SupplierIdField.Equals(value) != true)) {
                    this.SupplierIdField = value;
                    this.RaisePropertyChanged("SupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MrBill_MVC.MrBillTransactionServices.SupplierInfoDTO SupplierInfo {
            get {
                return this.SupplierInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierInfoField, value) != true)) {
                    this.SupplierInfoField = value;
                    this.RaisePropertyChanged("SupplierInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MrBillTransactionServices.IMrBillTransactionServices")]
    public interface IMrBillTransactionServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetUserTransactionsForCheck", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetUserTransactionsForCheckResponse" +
            "")]
        MrBill_MVC.MrBillTransactionServices.TransactionCheckInfo[] GetUserTransactionsForCheck(string token, string username, long userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetUserTransactionsForCheck", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetUserTransactionsForCheckResponse" +
            "")]
        System.Threading.Tasks.Task<MrBill_MVC.MrBillTransactionServices.TransactionCheckInfo[]> GetUserTransactionsForCheckAsync(string token, string username, long userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetTransactionsForUser", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetTransactionsForUserResponse")]
        MrBill_MVC.MrBillTransactionServices.TransactionDTO[] GetTransactionsForUser(string token, string username, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetTransactionsForUser", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetTransactionsForUserResponse")]
        System.Threading.Tasks.Task<MrBill_MVC.MrBillTransactionServices.TransactionDTO[]> GetTransactionsForUserAsync(string token, string username, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/SaveTransactionSuppliers", ReplyAction="http://tempuri.org/IMrBillTransactionServices/SaveTransactionSuppliersResponse")]
        int SaveTransactionSuppliers(string token, string username, MrBill_MVC.MrBillTransactionServices.UserSupplierInfoDTO userSupplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/SaveTransactionSuppliers", ReplyAction="http://tempuri.org/IMrBillTransactionServices/SaveTransactionSuppliersResponse")]
        System.Threading.Tasks.Task<int> SaveTransactionSuppliersAsync(string token, string username, MrBill_MVC.MrBillTransactionServices.UserSupplierInfoDTO userSupplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetTransactionById", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetTransactionByIdResponse")]
        MrBill_MVC.MrBillTransactionServices.TransactionDTO GetTransactionById(string token, string username, int transactionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetTransactionById", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetTransactionByIdResponse")]
        System.Threading.Tasks.Task<MrBill_MVC.MrBillTransactionServices.TransactionDTO> GetTransactionByIdAsync(string token, string username, int transactionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/CreateNewTransaction", ReplyAction="http://tempuri.org/IMrBillTransactionServices/CreateNewTransactionResponse")]
        int CreateNewTransaction(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/CreateNewTransaction", ReplyAction="http://tempuri.org/IMrBillTransactionServices/CreateNewTransactionResponse")]
        System.Threading.Tasks.Task<int> CreateNewTransactionAsync(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/CreateNewTransactionEx", ReplyAction="http://tempuri.org/IMrBillTransactionServices/CreateNewTransactionExResponse")]
        string CreateNewTransactionEx(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/CreateNewTransactionEx", ReplyAction="http://tempuri.org/IMrBillTransactionServices/CreateNewTransactionExResponse")]
        System.Threading.Tasks.Task<string> CreateNewTransactionExAsync(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/UpdateTransaction", ReplyAction="http://tempuri.org/IMrBillTransactionServices/UpdateTransactionResponse")]
        string UpdateTransaction(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/UpdateTransaction", ReplyAction="http://tempuri.org/IMrBillTransactionServices/UpdateTransactionResponse")]
        System.Threading.Tasks.Task<string> UpdateTransactionAsync(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/UpdateTransactionWithMainTrip", ReplyAction="http://tempuri.org/IMrBillTransactionServices/UpdateTransactionWithMainTripRespon" +
            "se")]
        string UpdateTransactionWithMainTrip(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans, int groupId, int mainTrip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/UpdateTransactionWithMainTrip", ReplyAction="http://tempuri.org/IMrBillTransactionServices/UpdateTransactionWithMainTripRespon" +
            "se")]
        System.Threading.Tasks.Task<string> UpdateTransactionWithMainTripAsync(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans, int groupId, int mainTrip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/RemoveMainTrip", ReplyAction="http://tempuri.org/IMrBillTransactionServices/RemoveMainTripResponse")]
        string RemoveMainTrip(string token, string username, int mainTrip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/RemoveMainTrip", ReplyAction="http://tempuri.org/IMrBillTransactionServices/RemoveMainTripResponse")]
        System.Threading.Tasks.Task<string> RemoveMainTripAsync(string token, string username, int mainTrip);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/ChangeMainTrip", ReplyAction="http://tempuri.org/IMrBillTransactionServices/ChangeMainTripResponse")]
        string ChangeMainTrip(string token, string username, int mainTrip, int groupIdOfGroupTrans, int transIdOfGroupTrans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/ChangeMainTrip", ReplyAction="http://tempuri.org/IMrBillTransactionServices/ChangeMainTripResponse")]
        System.Threading.Tasks.Task<string> ChangeMainTripAsync(string token, string username, int mainTrip, int groupIdOfGroupTrans, int transIdOfGroupTrans);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/CreateProject", ReplyAction="http://tempuri.org/IMrBillTransactionServices/CreateProjectResponse")]
        string CreateProject(string token, string username, string projectName, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/CreateProject", ReplyAction="http://tempuri.org/IMrBillTransactionServices/CreateProjectResponse")]
        System.Threading.Tasks.Task<string> CreateProjectAsync(string token, string username, string projectName, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetProjectID", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetProjectIDResponse")]
        int GetProjectID(string token, string username, string projectName, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetProjectID", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetProjectIDResponse")]
        System.Threading.Tasks.Task<int> GetProjectIDAsync(string token, string username, string projectName, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/CreateSupplier", ReplyAction="http://tempuri.org/IMrBillTransactionServices/CreateSupplierResponse")]
        string CreateSupplier(string token, string username, string supplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/CreateSupplier", ReplyAction="http://tempuri.org/IMrBillTransactionServices/CreateSupplierResponse")]
        System.Threading.Tasks.Task<string> CreateSupplierAsync(string token, string username, string supplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetSupplierIDBySupplierName", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetSupplierIDBySupplierNameResponse" +
            "")]
        int GetSupplierIDBySupplierName(string supplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetSupplierIDBySupplierName", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetSupplierIDBySupplierNameResponse" +
            "")]
        System.Threading.Tasks.Task<int> GetSupplierIDBySupplierNameAsync(string supplierName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetAllBookingRefByUserAndSupplier", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetAllBookingRefByUserAndSupplierRe" +
            "sponse")]
        string[] GetAllBookingRefByUserAndSupplier(string token, string username, int userId, int supplierId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMrBillTransactionServices/GetAllBookingRefByUserAndSupplier", ReplyAction="http://tempuri.org/IMrBillTransactionServices/GetAllBookingRefByUserAndSupplierRe" +
            "sponse")]
        System.Threading.Tasks.Task<string[]> GetAllBookingRefByUserAndSupplierAsync(string token, string username, int userId, int supplierId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMrBillTransactionServicesChannel : MrBill_MVC.MrBillTransactionServices.IMrBillTransactionServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MrBillTransactionServicesClient : System.ServiceModel.ClientBase<MrBill_MVC.MrBillTransactionServices.IMrBillTransactionServices>, MrBill_MVC.MrBillTransactionServices.IMrBillTransactionServices {
        
        public MrBillTransactionServicesClient() {
        }
        
        public MrBillTransactionServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MrBillTransactionServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MrBillTransactionServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MrBillTransactionServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MrBill_MVC.MrBillTransactionServices.TransactionCheckInfo[] GetUserTransactionsForCheck(string token, string username, long userID) {
            return base.Channel.GetUserTransactionsForCheck(token, username, userID);
        }
        
        public System.Threading.Tasks.Task<MrBill_MVC.MrBillTransactionServices.TransactionCheckInfo[]> GetUserTransactionsForCheckAsync(string token, string username, long userID) {
            return base.Channel.GetUserTransactionsForCheckAsync(token, username, userID);
        }
        
        public MrBill_MVC.MrBillTransactionServices.TransactionDTO[] GetTransactionsForUser(string token, string username, int userId) {
            return base.Channel.GetTransactionsForUser(token, username, userId);
        }
        
        public System.Threading.Tasks.Task<MrBill_MVC.MrBillTransactionServices.TransactionDTO[]> GetTransactionsForUserAsync(string token, string username, int userId) {
            return base.Channel.GetTransactionsForUserAsync(token, username, userId);
        }
        
        public int SaveTransactionSuppliers(string token, string username, MrBill_MVC.MrBillTransactionServices.UserSupplierInfoDTO userSupplier) {
            return base.Channel.SaveTransactionSuppliers(token, username, userSupplier);
        }
        
        public System.Threading.Tasks.Task<int> SaveTransactionSuppliersAsync(string token, string username, MrBill_MVC.MrBillTransactionServices.UserSupplierInfoDTO userSupplier) {
            return base.Channel.SaveTransactionSuppliersAsync(token, username, userSupplier);
        }
        
        public MrBill_MVC.MrBillTransactionServices.TransactionDTO GetTransactionById(string token, string username, int transactionId) {
            return base.Channel.GetTransactionById(token, username, transactionId);
        }
        
        public System.Threading.Tasks.Task<MrBill_MVC.MrBillTransactionServices.TransactionDTO> GetTransactionByIdAsync(string token, string username, int transactionId) {
            return base.Channel.GetTransactionByIdAsync(token, username, transactionId);
        }
        
        public int CreateNewTransaction(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans) {
            return base.Channel.CreateNewTransaction(token, username, trans);
        }
        
        public System.Threading.Tasks.Task<int> CreateNewTransactionAsync(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans) {
            return base.Channel.CreateNewTransactionAsync(token, username, trans);
        }
        
        public string CreateNewTransactionEx(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans) {
            return base.Channel.CreateNewTransactionEx(token, username, trans);
        }
        
        public System.Threading.Tasks.Task<string> CreateNewTransactionExAsync(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans) {
            return base.Channel.CreateNewTransactionExAsync(token, username, trans);
        }
        
        public string UpdateTransaction(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans, string groupName) {
            return base.Channel.UpdateTransaction(token, username, trans, groupName);
        }
        
        public System.Threading.Tasks.Task<string> UpdateTransactionAsync(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans, string groupName) {
            return base.Channel.UpdateTransactionAsync(token, username, trans, groupName);
        }
        
        public string UpdateTransactionWithMainTrip(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans, int groupId, int mainTrip) {
            return base.Channel.UpdateTransactionWithMainTrip(token, username, trans, groupId, mainTrip);
        }
        
        public System.Threading.Tasks.Task<string> UpdateTransactionWithMainTripAsync(string token, string username, MrBill_MVC.MrBillTransactionServices.TransactionDTO trans, int groupId, int mainTrip) {
            return base.Channel.UpdateTransactionWithMainTripAsync(token, username, trans, groupId, mainTrip);
        }
        
        public string RemoveMainTrip(string token, string username, int mainTrip) {
            return base.Channel.RemoveMainTrip(token, username, mainTrip);
        }
        
        public System.Threading.Tasks.Task<string> RemoveMainTripAsync(string token, string username, int mainTrip) {
            return base.Channel.RemoveMainTripAsync(token, username, mainTrip);
        }
        
        public string ChangeMainTrip(string token, string username, int mainTrip, int groupIdOfGroupTrans, int transIdOfGroupTrans) {
            return base.Channel.ChangeMainTrip(token, username, mainTrip, groupIdOfGroupTrans, transIdOfGroupTrans);
        }
        
        public System.Threading.Tasks.Task<string> ChangeMainTripAsync(string token, string username, int mainTrip, int groupIdOfGroupTrans, int transIdOfGroupTrans) {
            return base.Channel.ChangeMainTripAsync(token, username, mainTrip, groupIdOfGroupTrans, transIdOfGroupTrans);
        }
        
        public string CreateProject(string token, string username, string projectName, int userId) {
            return base.Channel.CreateProject(token, username, projectName, userId);
        }
        
        public System.Threading.Tasks.Task<string> CreateProjectAsync(string token, string username, string projectName, int userId) {
            return base.Channel.CreateProjectAsync(token, username, projectName, userId);
        }
        
        public int GetProjectID(string token, string username, string projectName, int userId) {
            return base.Channel.GetProjectID(token, username, projectName, userId);
        }
        
        public System.Threading.Tasks.Task<int> GetProjectIDAsync(string token, string username, string projectName, int userId) {
            return base.Channel.GetProjectIDAsync(token, username, projectName, userId);
        }
        
        public string CreateSupplier(string token, string username, string supplierName) {
            return base.Channel.CreateSupplier(token, username, supplierName);
        }
        
        public System.Threading.Tasks.Task<string> CreateSupplierAsync(string token, string username, string supplierName) {
            return base.Channel.CreateSupplierAsync(token, username, supplierName);
        }
        
        public int GetSupplierIDBySupplierName(string supplierName) {
            return base.Channel.GetSupplierIDBySupplierName(supplierName);
        }
        
        public System.Threading.Tasks.Task<int> GetSupplierIDBySupplierNameAsync(string supplierName) {
            return base.Channel.GetSupplierIDBySupplierNameAsync(supplierName);
        }
        
        public string[] GetAllBookingRefByUserAndSupplier(string token, string username, int userId, int supplierId) {
            return base.Channel.GetAllBookingRefByUserAndSupplier(token, username, userId, supplierId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllBookingRefByUserAndSupplierAsync(string token, string username, int userId, int supplierId) {
            return base.Channel.GetAllBookingRefByUserAndSupplierAsync(token, username, userId, supplierId);
        }
    }
}
