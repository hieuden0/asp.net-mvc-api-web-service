"use strict";

var GLOBAL = global || window;

function clearTimers() {
  this.clearIntervals();
  this.clearTimeouts();
}

module.exports = {
  clearIntervals: function clearIntervals() {
    this.__rt_intervals.forEach(GLOBAL.clearInterval);
  },
  clearTimeouts: function clearTimeouts() {
    this.__rt_timeouts.forEach(GLOBAL.clearTimeout);
  },
  clearInterval: function clearInterval() {
    return GLOBAL.clearInterval.apply(GLOBAL, arguments);
  },
  clearTimeout: function clearTimeout() {
    return GLOBAL.clearTimeout.apply(GLOBAL, arguments);
  },
  clearTimers: clearTimers,

  componentWillMount: function componentWillMount() {
    this.__rt_intervals = [];
    this.__rt_timeouts = [];
  },
  componentWillUnmount: clearTimers,

  setInterval: function setInterval(callback) {
    var _this = this;

    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    return this.__rt_intervals[this.__rt_intervals.push(GLOBAL.setInterval.apply(GLOBAL, [function () {
      for (var _len2 = arguments.length, params = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        params[_key2] = arguments[_key2];
      }

      callback.call.apply(callback, [_this].concat(params));
    }].concat(args))) - 1];
  },
  setTimeout: function setTimeout(callback) {
    var _this2 = this;

    for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
      args[_key3 - 1] = arguments[_key3];
    }

    return this.__rt_timeouts[this.__rt_timeouts.push(GLOBAL.setTimeout.apply(GLOBAL, [function () {
      for (var _len4 = arguments.length, params = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        params[_key4] = arguments[_key4];
      }

      callback.call.apply(callback, [_this2].concat(params));
    }].concat(args))) - 1];
  }
};